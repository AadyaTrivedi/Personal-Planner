{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\vibe-code\\\\react-planner\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport ThemeToggle from './components/ThemeToggle';\nimport ColorPicker from './components/ColorPicker';\nimport SettingsModal from './components/SettingsModal';\nimport { Settings, Calendar } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State management\n  const [categories, setCategories] = useState([{\n    id: 'cat',\n    name: 'CAT Preparation',\n    taskCount: 0\n  }, {\n    id: 'placements',\n    name: 'Placements',\n    taskCount: 0\n  }, {\n    id: 'data-analytics',\n    name: 'Data Analytics',\n    taskCount: 0\n  }]);\n  const [activeCategory, setActiveCategory] = useState('cat');\n  const [tasks, setTasks] = useState({});\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [accentColor, setAccentColor] = useState('purple');\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false); // State for Settings modal\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    loadDataFromStorage();\n  }, []);\n\n  // Save data to localStorage whenever state changes\n  useEffect(() => {\n    saveDataToStorage();\n  }, [categories, tasks, isDarkMode, accentColor]);\n\n  // Apply dark mode class to document\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [isDarkMode]);\n\n  // Load data from localStorage\n  const loadDataFromStorage = () => {\n    try {\n      const savedCategories = localStorage.getItem('planner-categories');\n      const savedTasks = localStorage.getItem('planner-tasks');\n      const savedTheme = localStorage.getItem('planner-theme');\n      const savedColor = localStorage.getItem('planner-accent-color');\n      if (savedCategories) {\n        setCategories(JSON.parse(savedCategories));\n      }\n      if (savedTasks) {\n        setTasks(JSON.parse(savedTasks));\n      }\n      if (savedTheme) {\n        setIsDarkMode(JSON.parse(savedTheme));\n      }\n      if (savedColor) {\n        setAccentColor(savedColor);\n      }\n    } catch (error) {\n      console.error('Error loading data from localStorage:', error);\n    }\n  };\n\n  // Save data to localStorage\n  const saveDataToStorage = () => {\n    try {\n      localStorage.setItem('planner-categories', JSON.stringify(categories));\n      localStorage.setItem('planner-tasks', JSON.stringify(tasks));\n      localStorage.setItem('planner-theme', JSON.stringify(isDarkMode));\n      localStorage.setItem('planner-accent-color', accentColor);\n    } catch (error) {\n      console.error('Error saving data to localStorage:', error);\n    }\n  };\n\n  // Update task counts for categories\n  const updateTaskCounts = () => {\n    setCategories(prevCategories => prevCategories.map(category => {\n      var _tasks$category$id;\n      return {\n        ...category,\n        taskCount: ((_tasks$category$id = tasks[category.id]) === null || _tasks$category$id === void 0 ? void 0 : _tasks$category$id.length) || 0\n      };\n    }));\n  };\n\n  // Update task counts whenever tasks change\n  useEffect(() => {\n    updateTaskCounts();\n  }, [tasks]);\n\n  // Add new task\n  const handleAddTask = newTask => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [activeCategory]: [...(prevTasks[activeCategory] || []), newTask]\n    }));\n  };\n\n  // Toggle task status\n  const handleToggleTask = taskId => {\n    setTasks(prevTasks => {\n      var _prevTasks$activeCate;\n      return {\n        ...prevTasks,\n        [activeCategory]: ((_prevTasks$activeCate = prevTasks[activeCategory]) === null || _prevTasks$activeCate === void 0 ? void 0 : _prevTasks$activeCate.map(task => task.id === taskId ? {\n          ...task,\n          status: task.status === 'pending' ? 'done' : 'pending'\n        } : task)) || []\n      };\n    });\n  };\n\n  // Delete task\n  const handleDeleteTask = taskId => {\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      setTasks(prevTasks => {\n        var _prevTasks$activeCate2;\n        return {\n          ...prevTasks,\n          [activeCategory]: ((_prevTasks$activeCate2 = prevTasks[activeCategory]) === null || _prevTasks$activeCate2 === void 0 ? void 0 : _prevTasks$activeCate2.filter(task => task.id !== taskId)) || []\n        };\n      });\n    }\n  };\n\n  // Add new category\n  const handleAddCategory = categoryName => {\n    const newCategory = {\n      id: `category_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      name: categoryName,\n      taskCount: 0\n    };\n    setCategories(prev => [...prev, newCategory]);\n    setTasks(prev => ({\n      ...prev,\n      [newCategory.id]: []\n    }));\n  };\n\n  // Rename category\n  const handleRenameCategory = (categoryId, newName) => {\n    setCategories(prev => prev.map(category => category.id === categoryId ? {\n      ...category,\n      name: newName\n    } : category));\n  };\n\n  // Delete category\n  const handleDeleteCategory = categoryId => {\n    setCategories(prev => prev.filter(category => category.id !== categoryId));\n    setTasks(prev => {\n      const newTasks = {\n        ...prev\n      };\n      delete newTasks[categoryId];\n      return newTasks;\n    });\n\n    // Switch to first category if current category is deleted\n    if (activeCategory === categoryId) {\n      const remainingCategories = categories.filter(cat => cat.id !== categoryId);\n      if (remainingCategories.length > 0) {\n        setActiveCategory(remainingCategories[0].id);\n      }\n    }\n  };\n\n  // Toggle theme\n  const handleToggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n\n  // Change accent color - this function updates the accent color and triggers re-renders\n  const handleColorChange = color => {\n    setAccentColor(color);\n    // Force a re-render by updating a timestamp (this ensures all components get the new color)\n    setTasks(prevTasks => ({\n      ...prevTasks\n    }));\n  };\n\n  // Toggle Settings modal\n  const handleToggleSettings = () => {\n    setIsSettingsOpen(prev => !prev);\n  };\n\n  // Close Settings modal\n  const handleCloseSettings = () => {\n    setIsSettingsOpen(false);\n  };\n\n  // Get current category tasks\n  const currentTasks = tasks[activeCategory] || [];\n  const currentCategory = categories.find(cat => cat.id === activeCategory);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-300\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        categories: categories,\n        activeCategory: activeCategory,\n        onCategorySelect: setActiveCategory,\n        onAddCategory: handleAddCategory,\n        onRenameCategory: handleRenameCategory,\n        onDeleteCategory: handleDeleteCategory,\n        accentColor: accentColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 flex flex-col overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 px-6 py-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: `text-${accentColor === 'purple' ? 'accent-purple' : `accent-${accentColor}`}-600 dark:text-${accentColor === 'purple' ? 'accent-purple' : `accent-${accentColor}`}-400`,\n                size: 24\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"text-xl font-bold text-gray-800 dark:text-gray-200\",\n                  children: (currentCategory === null || currentCategory === void 0 ? void 0 : currentCategory.name) || 'Personal Planner'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-500 dark:text-gray-400\",\n                  children: [currentTasks.length, \" tasks \\u2022 \", currentTasks.filter(t => t.status === 'pending').length, \" pending\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleToggleSettings,\n                className: \"flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\",\n                children: [/*#__PURE__*/_jsxDEV(Settings, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Settings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ColorPicker, {\n                currentColor: accentColor,\n                onColorChange: handleColorChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ThemeToggle, {\n                isDarkMode: isDarkMode,\n                onToggle: handleToggleTheme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"flex-1 overflow-y-auto custom-scrollbar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6 max-w-4xl mx-auto\",\n            children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n              onAddTask: handleAddTask,\n              accentColor: accentColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n              tasks: currentTasks,\n              onToggleTask: handleToggleTask,\n              onDeleteTask: handleDeleteTask,\n              accentColor: accentColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingsModal, {\n      isOpen: isSettingsOpen,\n      onClose: handleCloseSettings,\n      isDarkMode: isDarkMode,\n      onToggleTheme: handleToggleTheme,\n      accentColor: accentColor,\n      onColorChange: handleColorChange,\n      categories: categories,\n      onRenameCategory: handleRenameCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0wYSuaQvUKUDOH1qq9asmRCnvHc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","TaskForm","TaskList","ThemeToggle","ColorPicker","SettingsModal","Settings","Calendar","jsxDEV","_jsxDEV","App","_s","categories","setCategories","id","name","taskCount","activeCategory","setActiveCategory","tasks","setTasks","isDarkMode","setIsDarkMode","accentColor","setAccentColor","isSettingsOpen","setIsSettingsOpen","loadDataFromStorage","saveDataToStorage","document","documentElement","classList","add","remove","savedCategories","localStorage","getItem","savedTasks","savedTheme","savedColor","JSON","parse","error","console","setItem","stringify","updateTaskCounts","prevCategories","map","category","_tasks$category$id","length","handleAddTask","newTask","prevTasks","handleToggleTask","taskId","_prevTasks$activeCate","task","status","handleDeleteTask","window","confirm","_prevTasks$activeCate2","filter","handleAddCategory","categoryName","newCategory","Date","now","Math","random","toString","substr","prev","handleRenameCategory","categoryId","newName","handleDeleteCategory","newTasks","remainingCategories","cat","handleToggleTheme","handleColorChange","color","handleToggleSettings","handleCloseSettings","currentTasks","currentCategory","find","className","children","onCategorySelect","onAddCategory","onRenameCategory","onDeleteCategory","fileName","_jsxFileName","lineNumber","columnNumber","size","t","onClick","currentColor","onColorChange","onToggle","onAddTask","onToggleTask","onDeleteTask","isOpen","onClose","onToggleTheme","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/vibe-code/react-planner/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Sidebar from './components/Sidebar';\r\nimport TaskForm from './components/TaskForm';\r\nimport TaskList from './components/TaskList';\r\nimport ThemeToggle from './components/ThemeToggle';\r\nimport ColorPicker from './components/ColorPicker';\r\nimport SettingsModal from './components/SettingsModal';\r\nimport { Settings, Calendar } from 'lucide-react';\r\n\r\nfunction App() {\r\n  // State management\r\n  const [categories, setCategories] = useState([\r\n    { id: 'cat', name: 'CAT Preparation', taskCount: 0 },\r\n    { id: 'placements', name: 'Placements', taskCount: 0 },\r\n    { id: 'data-analytics', name: 'Data Analytics', taskCount: 0 }\r\n  ]);\r\n  \r\n  const [activeCategory, setActiveCategory] = useState('cat');\r\n  const [tasks, setTasks] = useState({});\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [accentColor, setAccentColor] = useState('purple');\r\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false); // State for Settings modal\r\n\r\n  // Load data from localStorage on component mount\r\n  useEffect(() => {\r\n    loadDataFromStorage();\r\n  }, []);\r\n\r\n  // Save data to localStorage whenever state changes\r\n  useEffect(() => {\r\n    saveDataToStorage();\r\n  }, [categories, tasks, isDarkMode, accentColor]);\r\n\r\n  // Apply dark mode class to document\r\n  useEffect(() => {\r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  // Load data from localStorage\r\n  const loadDataFromStorage = () => {\r\n    try {\r\n      const savedCategories = localStorage.getItem('planner-categories');\r\n      const savedTasks = localStorage.getItem('planner-tasks');\r\n      const savedTheme = localStorage.getItem('planner-theme');\r\n      const savedColor = localStorage.getItem('planner-accent-color');\r\n\r\n      if (savedCategories) {\r\n        setCategories(JSON.parse(savedCategories));\r\n      }\r\n      \r\n      if (savedTasks) {\r\n        setTasks(JSON.parse(savedTasks));\r\n      }\r\n      \r\n      if (savedTheme) {\r\n        setIsDarkMode(JSON.parse(savedTheme));\r\n      }\r\n      \r\n      if (savedColor) {\r\n        setAccentColor(savedColor);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading data from localStorage:', error);\r\n    }\r\n  };\r\n\r\n  // Save data to localStorage\r\n  const saveDataToStorage = () => {\r\n    try {\r\n      localStorage.setItem('planner-categories', JSON.stringify(categories));\r\n      localStorage.setItem('planner-tasks', JSON.stringify(tasks));\r\n      localStorage.setItem('planner-theme', JSON.stringify(isDarkMode));\r\n      localStorage.setItem('planner-accent-color', accentColor);\r\n    } catch (error) {\r\n      console.error('Error saving data to localStorage:', error);\r\n    }\r\n  };\r\n\r\n  // Update task counts for categories\r\n  const updateTaskCounts = () => {\r\n    setCategories(prevCategories => \r\n      prevCategories.map(category => ({\r\n        ...category,\r\n        taskCount: tasks[category.id]?.length || 0\r\n      }))\r\n    );\r\n  };\r\n\r\n  // Update task counts whenever tasks change\r\n  useEffect(() => {\r\n    updateTaskCounts();\r\n  }, [tasks]);\r\n\r\n  // Add new task\r\n  const handleAddTask = (newTask) => {\r\n    setTasks(prevTasks => ({\r\n      ...prevTasks,\r\n      [activeCategory]: [...(prevTasks[activeCategory] || []), newTask]\r\n    }));\r\n  };\r\n\r\n  // Toggle task status\r\n  const handleToggleTask = (taskId) => {\r\n    setTasks(prevTasks => ({\r\n      ...prevTasks,\r\n      [activeCategory]: prevTasks[activeCategory]?.map(task =>\r\n        task.id === taskId\r\n          ? { ...task, status: task.status === 'pending' ? 'done' : 'pending' }\r\n          : task\r\n      ) || []\r\n    }));\r\n  };\r\n\r\n  // Delete task\r\n  const handleDeleteTask = (taskId) => {\r\n    if (window.confirm('Are you sure you want to delete this task?')) {\r\n      setTasks(prevTasks => ({\r\n        ...prevTasks,\r\n        [activeCategory]: prevTasks[activeCategory]?.filter(task => task.id !== taskId) || []\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Add new category\r\n  const handleAddCategory = (categoryName) => {\r\n    const newCategory = {\r\n      id: `category_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      name: categoryName,\r\n      taskCount: 0\r\n    };\r\n    \r\n    setCategories(prev => [...prev, newCategory]);\r\n    setTasks(prev => ({ ...prev, [newCategory.id]: [] }));\r\n  };\r\n\r\n  // Rename category\r\n  const handleRenameCategory = (categoryId, newName) => {\r\n    setCategories(prev => \r\n      prev.map(category => \r\n        category.id === categoryId \r\n          ? { ...category, name: newName }\r\n          : category\r\n      )\r\n    );\r\n  };\r\n\r\n  // Delete category\r\n  const handleDeleteCategory = (categoryId) => {\r\n    setCategories(prev => prev.filter(category => category.id !== categoryId));\r\n    \r\n    setTasks(prev => {\r\n      const newTasks = { ...prev };\r\n      delete newTasks[categoryId];\r\n      return newTasks;\r\n    });\r\n\r\n    // Switch to first category if current category is deleted\r\n    if (activeCategory === categoryId) {\r\n      const remainingCategories = categories.filter(cat => cat.id !== categoryId);\r\n      if (remainingCategories.length > 0) {\r\n        setActiveCategory(remainingCategories[0].id);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Toggle theme\r\n  const handleToggleTheme = () => {\r\n    setIsDarkMode(prev => !prev);\r\n  };\r\n\r\n  // Change accent color - this function updates the accent color and triggers re-renders\r\n  const handleColorChange = (color) => {\r\n    setAccentColor(color);\r\n    // Force a re-render by updating a timestamp (this ensures all components get the new color)\r\n    setTasks(prevTasks => ({ ...prevTasks }));\r\n  };\r\n\r\n  // Toggle Settings modal\r\n  const handleToggleSettings = () => {\r\n    setIsSettingsOpen(prev => !prev);\r\n  };\r\n\r\n  // Close Settings modal\r\n  const handleCloseSettings = () => {\r\n    setIsSettingsOpen(false);\r\n  };\r\n\r\n  // Get current category tasks\r\n  const currentTasks = tasks[activeCategory] || [];\r\n  const currentCategory = categories.find(cat => cat.id === activeCategory);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-300\">\r\n      <div className=\"flex h-screen\">\r\n        {/* Sidebar */}\r\n        <Sidebar\r\n          categories={categories}\r\n          activeCategory={activeCategory}\r\n          onCategorySelect={setActiveCategory}\r\n          onAddCategory={handleAddCategory}\r\n          onRenameCategory={handleRenameCategory}\r\n          onDeleteCategory={handleDeleteCategory}\r\n          accentColor={accentColor}\r\n        />\r\n\r\n        {/* Main Content */}\r\n        <div className=\"flex-1 flex flex-col overflow-hidden\">\r\n          {/* Top Bar */}\r\n          <header className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 px-6 py-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <Calendar className={`text-${accentColor === 'purple' ? 'accent-purple' : `accent-${accentColor}`}-600 dark:text-${accentColor === 'purple' ? 'accent-purple' : `accent-${accentColor}`}-400`} size={24} />\r\n                <div>\r\n                  <h1 className=\"text-xl font-bold text-gray-800 dark:text-gray-200\">\r\n                    {currentCategory?.name || 'Personal Planner'}\r\n                  </h1>\r\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    {currentTasks.length} tasks • {currentTasks.filter(t => t.status === 'pending').length} pending\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center gap-3\">\r\n                {/* Settings Button - now functional */}\r\n                <button\r\n                  onClick={handleToggleSettings}\r\n                  className=\"flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-200 p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors\"\r\n                >\r\n                  <Settings size={16} />\r\n                  <span>Settings</span>\r\n                </button>\r\n                \r\n                <ColorPicker\r\n                  currentColor={accentColor}\r\n                  onColorChange={handleColorChange}\r\n                />\r\n                \r\n                <ThemeToggle\r\n                  isDarkMode={isDarkMode}\r\n                  onToggle={handleToggleTheme}\r\n                />\r\n              </div>\r\n            </div>\r\n          </header>\r\n\r\n          {/* Main Content Area */}\r\n          <main className=\"flex-1 overflow-y-auto custom-scrollbar\">\r\n            <div className=\"p-6 max-w-4xl mx-auto\">\r\n              {/* Task Form */}\r\n              <TaskForm\r\n                onAddTask={handleAddTask}\r\n                accentColor={accentColor}\r\n              />\r\n\r\n              {/* Task List */}\r\n              <TaskList\r\n                tasks={currentTasks}\r\n                onToggleTask={handleToggleTask}\r\n                onDeleteTask={handleDeleteTask}\r\n                accentColor={accentColor}\r\n              />\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Settings Modal */}\r\n      <SettingsModal\r\n        isOpen={isSettingsOpen}\r\n        onClose={handleCloseSettings}\r\n        isDarkMode={isDarkMode}\r\n        onToggleTheme={handleToggleTheme}\r\n        accentColor={accentColor}\r\n        onColorChange={handleColorChange}\r\n        categories={categories}\r\n        onRenameCategory={handleRenameCategory}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}